#db configuration
#spring.datasource.url=jdbc:informix-sqli://172.27.103.26:9088/smep:INFORMIXSERVER=gbaseserver;IFX_USE_STRENC=true;CLIENT_LOCALE=zh_cn.utf8;DB_LOCALE=zh_cn.utf8;IFX_LOCK_MODE_WAIT=100;NEWCODESET=utf8,utf8,57372;DBDATE=Y4MD-;GL_USEGLU=1;
#spring.datasource.username=informix
#spring.datasource.password=informix
#spring.datasource.driverClassName=com.informix.jdbc.IfxDriver

#spring.jpa.show-sql=true
#spring.jpa.database=INFORMIX
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Informix10Dialect

#命名策略,加分隔线"_",这个是驼峰命名法，遇到大写加下划线
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

spring.datasource.url=jdbc:mysql://172.27.103.24:3306/spring-jpa?useUnicode=true&characterEncoding=UTF-8&useSSL=false&max_allowed_packet=1000M
spring.datasource.username=root
spring.datasource.password=111111
#spring.datasource.driverClassName=com.mysql.jdbc.Driver  #已过期
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

#是否显示SQL
spring.jpa.show-sql=true
#指定JPA的DB
spring.jpa.database=MYSQL
#执行DDL语句时，是创建create，创建删除create-drop，更新update
spring.jpa.hibernate.ddl-auto=update
#命名策略：当创建了entity，会在DB中创建一个表结构
#这个是驼峰命名法，遇到大写加下划线
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#这个是默认写法，以属性名命名
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#hibernate配置DB方言
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
